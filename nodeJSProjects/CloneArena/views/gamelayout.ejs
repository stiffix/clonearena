<!DOCTYPE html>
<html>
  <head>
    <title><%=typeof title == 'undefined' ? 'CloneArena' : title%></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/clonearenastyles.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
  </head>

  <body>
      <nav class="navbar navbar-default navbar-fixed-top">
          <div class="container">
              <div class="navbar-header">
                    <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" href="/">.clone arena</a>
               </div>
              <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                  <ul class="nav navbar-nav">
                      <!-- If Authenticated -->
                      <% if (typeof req.session.user != 'undefined') { %>
                      
                        <li> <a href="/user/logout">Log Out</a> </li>
                        <li> <a href="/shop/store">Customization</a> </li>
                        <li> <a href="/game/lobby">Battle</a> </li>
                      
                        <% if (req.session.user.user_type == 2) { %>
                            <!-- ADMIN PANEL -->
                            <li><a href="/user/management">Management</a></li>
                        <% } %>
                      
                      <% } else { %>
                      
                        <li <% if ((typeof page != 'undefined') &&  ('/user/login' == page )) { %> class="active" <% } %> > <a href="/user/login">Login</a></li>
                        <li <% if ((typeof page != 'undefined') && ( '/user/signup' == page )) { %> class="active" <% } %> ><a href="/user/signup">Sign Up</a></li>
                      
                      <% } %>
                      <li <% if ((typeof page != 'undefined') && ( '/score/show' == page )) { %> class="active" <% } %> ><a href="/score/show">TOP 30</a></li>
                  </ul>
              </div>
          </div>
      </nav>
      
    <div class="container content-min-height">
        <!-- ALERTS -->
        <% if (req.session.message) { %>
            <% if (typeof page == 'undefined' || (req.session.message_page != page )) {
                    req.session.message = undefined;
                } else { %>
                    <div class="alert alert-danger alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <span id="alert-message-display"><strong>Error!</strong> <%= req.session.message %> </span>
                    </div>
            <% }
        } else if (req.session.success_message) { %>
            <div class="alert alert-info alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <span id="alert-message-display"><strong><%= req.session.success_message %></strong></span>
            </div>
            <% 
                req.session.success_message = undefined;
            } %>
        <!-- // ALERTS END -->
        
        <%- body %>    
    </div>
    



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/jquery-2.2.3.min.js"></script>
    <script src="/js/dependencies/bootstrap.min.js"></script>
    <script src="/js/dependencies/engine.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
